package com.thread;
class ATMTwo implements Runnable {
		private long depositMoney = 10000;
		@Override
		public void run() {
			synchronized (this) {
				//10번의 인출을 진행
				for(int i=0; i<10; i++) {//지연처리
					if (getDepositMoney()<=0) {
						break;
					}
					withDraw(1000);
					//잔고가 짝수금액일때는 강제로 지연을 시킴
					if() {
						try {
							this.wait();
						} catch (InterruptedException ie) {
							ie.printStackTrace();
						}
					}
				}///////////end of for
			}///////////////end of synchronized
		}
		//** 잔고를 가져오는 메소드 선언 **//
		public long getDepositMoney() {
			return depositMoney;
		}
}
public class WaitNotifyEx{


	public static void main(String[] args) {
		ATMTwo atm = new ATMTwo();
		// insert here - 엄마와 아들 스레드 추가하기
		Thread mother = new Thread(atm, "엄마");
		Thread son = new Thread(atm, "아들");
		mother.start();
		son.start();
	}
}
