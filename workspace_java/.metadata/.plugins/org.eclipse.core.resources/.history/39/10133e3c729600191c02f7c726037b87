package com.project;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class RenDetail extends JFrame {
	JPanel jp_north = new JPanel();
	JPanel jp_north_second = new JPanel();
	JPanel jp_north_first = new JPanel();
	String cols[] = {"대여상세번호","시리얼번호","DVD명","대여료"};
	String data[][] = new String[0][];
	DefaultTableModel dtm_dvdList = new DefaultTableModel(data,cols);
	JButton jbtn_det = new JButton("상세조회");
	JButton jbtn_sel = new JButton("검색");
	JButton jbtn_ins = new JButton("입력");
	JButton jbtn_upd = new JButton("수정");
	JButton jbtn_del = new JButton("삭제");
	String searchLabel[] = {"대여상세번호","시리얼번호","DVD명"};
	JComboBox jcb_search = new JComboBox(searchLabel);
	JTextField jtf_keyword = new JTextField("",20);
	JTable			  jt_dvdList  = new JTable(dtm_dvdList);
	JTableHeader  	  jth_dvdList = jt_dvdList.getTableHeader();
	JScrollPane       jsp_dvdList = new JScrollPane(jt_dvdList);// 최종속지
	String keyword = null;
	String label = null;
	String combobox = null;
	String u_rnum = null;
	SubRenDetial subDetail= null;
	
	public RenDetail() {}
	public RenDetail(String u_rnum) {
		this.u_rnum = u_rnum;
		initDisplay();
	}
	
	private void initDisplay() {
		//이벤트 처리부
		jbtn_sel.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				refreshData();
			}
		});
		jbtn_ins.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				insertActionPerformed(e);
			}
		});
		//화면 입히기
		jp_north_second.setLayout(new FlowLayout(FlowLayout.LEFT));
		jp_north_first.setLayout(new FlowLayout(FlowLayout.LEFT));
		jp_north_second.add(jcb_search);
		jp_north_second.add(jtf_keyword);
		jp_north_second.add(jbtn_sel);		
		jp_north_first.add(jbtn_det);
		jp_north_first.add(jbtn_ins);
		jp_north_first.add(jbtn_upd);
		jp_north_first.add(jbtn_del);
		jp_north.setLayout(new GridLayout(2,1));
		jp_north.add(jp_north_second);
		jp_north.add(jp_north_first);
		this.setLayout(new BorderLayout());
		this.add("North", jp_north);
		this.add("Center", jsp_dvdList);
		this.setTitle(u_rnum+"_대여상세");
		this.setSize(500,500);
		this.setVisible(true);
		refreshData();
	}
	
	protected void insertActionPerformed(ActionEvent e) {
		String label = e.getActionCommand();
		subDetail = null;
		subDetail = new SubRenDetial();
		subDetail.set(null, label, this, true, u_rnum);
	}
	public void refreshData() {
		this.keyword = jtf_keyword.getText();
		this.combobox = (String) jcb_search.getSelectedItem();
		while(dtm_dvdList.getRowCount()>0) {
			dtm_dvdList.removeRow(0);
		}
		RenDetailCtrl rdCtrl = new RenDetailCtrl();
		RenDetailVO paVO = new RenDetailVO();
		paVO.setU_rnum(u_rnum);
		paVO.setKeyword(keyword);
		paVO.setCombobox(combobox);
		List<Map<String,Object>> list = rdCtrl.send("select", paVO);
		Iterator<Map<String,Object>> it = list.iterator();
		Object keys[] = null;
		if((list==null)||(list.size()==0)) {
			JOptionPane.showMessageDialog(this, "데이터가 없습니다.");
		} else {
			while(it.hasNext()) {
				Map<String, Object> data = it.next();
				keys = data.keySet().toArray();
				Vector rowData = new Vector();
				rowData.add(data.get(keys[0]));//
				rowData.add(data.get(keys[1]));//
				rowData.add(data.get(keys[2]));//
				rowData.add(data.get(keys[3]));//
				dtm_dvdList.addRow(rowData);
			}
		}
	}
//	public static void main(String[] args) {
//		RenDetail rd = new RenDetail();
//		rd.initDisplay();
//
//	}

}
