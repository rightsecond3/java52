package UI.swing;

import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class SungJuckApp extends JFrame implements ActionListener {
	///// 선언부
	JPanel jp_north = new JPanel();
	JLabel jl_inwon = new JLabel("인원수", JLabel.RIGHT);
	JLabel jl = new JLabel("명", JLabel.LEFT);
	JTextField jtf_inwon = new JTextField(10);
	JButton jbtn_add = new JButton("추가");
	Object data[][] = new Object[0][7];
	String cols[] = { "이름", "JAVA", "Oracle", "JSP", "총점", "평균", "석차" };
	DefaultTableModel dtm_list = null;
	JTable jt_list = null;
	JScrollPane jsp_list = null;
	Container cont = this.getContentPane();

	/*
	 * 문제 제기 화면을 처리하는 메소드 호출을 생성자에서 할 수도 있고 메인 메소드에서 할 수도 있다. 두가지 경우의 차이점에 대해 생각해
	 * 보세요.
	 */

	// *** 생성자
	public SungJuckApp() {
		//initDisplay();
	}

	// ** 화면처리
	public void initDisplay() {
		jp_north.add(jl_inwon);
		jp_north.add(jtf_inwon);
		jp_north.add(jl);
		jp_north.add(jbtn_add);
		cont.add("North", jp_north);
		this.setResizable(false);
		this.setSize(300, 250);
		this.setVisible(true);
	}

	// * 이벤트 처리부
	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj = e.getSource();
		if (obj == jbtn_add) {
			dtm_list = new DefaultTableModel(data, cols);
			jt_list = new JTable(dtm_list);
			jsp_list = new JScrollPane(jt_list
					, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED
					, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
			cont.add("Center", jsp_list);
			cont.revalidate();
			this.pack();
		}
	}

	// *메인메소드
	public static void main(String[] args) {
		SungJuckApp sja = new SungJuckApp();
		sja.initDisplay();
	}
}
