package com.oracle;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.Scanner;

import com.util.DBConnectionMgr;
import com.vo.DeptVO;

import oracle.jdbc.OracleCallableStatement;

public class EmpJDBC {
	Connection 		   con = null;//연결통로확보
	CallableStatement cstmt =null;//프로시저를 호출,요청
	OracleCallableStatement ocstmt = null;
	public DeptVO getmy_proc() {
		DeptVO dvo = null;
		DBConnectionMgr dbMgr = DBConnectionMgr.getInstance();
		try {
			//예외가 발생할 가능성이 있는 코드
			con = dbMgr.getConnection();
			con.setAutoCommit(false);
			cstmt = con.prepareCall("{call MY_PROC(?)}");
			cstmt.registerOutParameter(1, java.sql.Types.REF_CURSOR);
			cstmt.execute();
			ocstmt = (OracleCallableStatement)cstmt;
			ResultSet rs = ocstmt.getCursor(1); //ResultSet 커서조작
			while(rs.next()) {
				dvo = new DeptVO();
				dvo.setDeptno(rs.getInt("deptno"));
				dvo.setDname(rs.getString("dname"));
				dvo.setLoc(rs.getString("loc"));
			}
		} catch (Exception e) {
			System.out.println("[[Exception]]"+e.toString());
		}
		return dvo;
	}
	public void getProc_deptnoUpdate() {
		String msg = null;//프로시저의 out속성값 받아서 저장할 변수
		//DBConnectionMgr dbMgr = new DBConnectionMgr과 밑 행의 차이를 확실히 아는가?
		DBConnectionMgr dbMgr = DBConnectionMgr.getInstance();
		try {
			con = dbMgr.getConnection();
			//자바에세는 오토커밋이 디폴트
			con.setAutoCommit(false);
			cstmt = con.prepareCall("{call proc_deptnoUpdate(?,?)}");
			System.out.println("부서번호를 입력하세요.");
			Scanner scan = new Scanner(System.in);
			int u_deptno = scan.nextInt();//사용자가 입력한 부서번호 받아오기
			cstmt.setInt(1, u_deptno);//1번째 물음표(IN속성 넣어주기)
			cstmt.registerOutParameter(2, java.sql.Types.VARCHAR);//2번째 물음표(OUT속성 타입정해주기)
			//오라클서버에게 처리요청
			int result = cstmt.executeUpdate(); //성공=1, 실패=0
			msg = cstmt.getString(2);//2번째 msg 꺼내오기
			System.out.println(msg);
		} catch (Exception e) {
			//절대로 print안에 넣지 말것.
			//stack메모리 영역에 쌓여있는 에러메세지를 모두 출력해줌.
			e.printStackTrace();
		} finally { //에러가 발생하더라도 무조건 실행하는 코드
			//사원한 자원 반납할것. - 명시적으로
			//생성된 역순으로 반납처리 할것.
			try {
				if (cstmt!=null) {
					cstmt.close();
				}
				if (con!=null) {
					con.close();
				}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}
	public String getProc_empnoUpdate() {
		String msg = null;
		//DBConnectionMgr dbMgr = new DBConnectionMgr과 밑 행의 차이를 확실히 아는가?
		DBConnectionMgr dbMgr = DBConnectionMgr.getInstance();
		try {
			con = dbMgr.getConnection();
			con.setAutoCommit(false);
			cstmt = con.prepareCall("{call proc_empnoUpdate(?,?)}");
			System.out.println("사원번호를 입력하세요.");
			Scanner scan = new Scanner(System.in);
			int u_empno = scan.nextInt();//사용자가 입력한 사원번호 받아오기
			cstmt.setInt(1, u_empno);//1번째 물음표(IN속성 넣어주기)
			cstmt.registerOutParameter(2, java.sql.Types.VARCHAR);//2번째 물음표(OUT속성 타입정해주기)
			//오라클서버에게 처리요청
			int result = cstmt.executeUpdate(); //성공=1, 실패=0
//			con.commit();//자바에서 오라클의 커밋을 대신 처리해주는 코드
			msg = cstmt.getString(2);//2번째 msg 꺼내오기
			System.out.println(msg);
		} catch (Exception e) {
			System.out.println(e.getMessage());//e.getMessage() 오라클의 에러메세지를 그대로 보여줌
		}
		return msg;
	}
	public static void main(String[] args) {
		EmpJDBC ejdbc = new EmpJDBC();
//		ejdbc.getProc_empnoUpdate();
//		System.out.println(ejdbc.getProc_deptnoUpdate());
		ejdbc.getProc_deptnoUpdate();
	}

}
