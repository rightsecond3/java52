package com.helpme3;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.List;
import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class Server extends JFrame implements Runnable {
	ServerSocket sSocket = null;
	Socket cSocket = null;
	ServerThread st = null;
	// 전체 사용자 스레드
	List<ServerThread> globalList = new Vector<ServerThread>();
	// 전체 방 리스트 넣어주는거
	List<VOChatList> chatList = new Vector<VOChatList>();
	JTextArea jta_log = new JTextArea();
	JScrollPane jsp_log = new JScrollPane(jta_log);

	// *** 생성자
	public Server() {
	}

	// ** 화면 처리부
	public void initDisplay() {
		jta_log.getCaret().setSelectionVisible(true);
		jta_log.setCaretColor(Color.white);
		jta_log.getCaret().setBlinkRate(300);
		jta_log.getCaret().setVisible(true);
		jta_log.setForeground(Color.white);
		jta_log.setBackground(Color.black);
		// 창 닫힐 때 자원 반납
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				super.windowClosed(e);
				try {
					if(sSocket!=null) sSocket.close();
				} catch (Exception e2) {
					// TODO: handle exception
				}
			}
		});
		this.add(jsp_log);
		this.setTitle("서버 측 로그 출력창");
		this.setSize(500, 500);
		this.setVisible(true);
	}

	@Override
	public void run() {
//		globalList = new Vector<ServerThread>();
//		chatList = new Vector<VOChatList>();
		CtrlServer sCtrl = new CtrlServer();
		chatList = sCtrl.send("getclist"); //List<VO> 
		for(int i=0;i<chatList.size();i++) {
			VOChatList vo = chatList.get(i);
			System.out.println(i+"번째 "+vo.getClist_code()+"\n");
		}
		boolean isStop = false;
		try {
			sSocket = new ServerSocket(5050);
			while (!isStop) {
				cSocket = sSocket.accept();
				jta_log.append(cSocket.toString() + "\n");
				st = new ServerThread(this);
				st.start();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	//*메인 메소드
	public static void main(String[] args) {
		Server server = new Server();
		server.initDisplay();
		new Thread(server).start();//내 안의 run 메소드 호출
	}
}
