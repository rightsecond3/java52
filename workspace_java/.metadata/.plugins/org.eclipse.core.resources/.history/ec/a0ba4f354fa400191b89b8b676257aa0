package com.helpme3;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Vector;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.Border;

public class ChatListView extends JPanel {
	///선언부
	//* 검색
	JPanel jp_search = new JPanel();
	JButton jbtn_search = new JButton("검색");
	//텍스트필드의 외부 보더 검정색 제거
	JTextField jtf_search = new JTextField(35) {
		public void setBorder(Border border) {}
	};
	//* 채팅목록
	JPanel jp_chat = new JPanel();
	JScrollPane jsp = new JScrollPane(jp_chat) {
		public void setBorder(Border border) {}
	};
	ChatGroup cg = null;
	//테스트 완료
	List<Map<String, Object>> list = null;
	Map<String, Object> map = null;
	//////////////////////////////
	 JPanel jp_img = new JPanel();
	 JPanel jp_second = new JPanel();
	 JPanel jp_time = new JPanel();
	 JLabel jl_img = new JLabel("프사", JLabel.CENTER);
	 JLabel jl_name = new JLabel("이름", JLabel.LEFT);
	 JLabel jl_msg = new JLabel("마지막메세지", JLabel.LEFT);
	 JLabel jl_time = new JLabel("시간", JLabel.RIGHT);
	 JPopupMenu jpm = new JPopupMenu();
     JMenuItem jmi_change = new JMenuItem("채팅방명 변경");
	 JMenuItem jmi_exit = new JMenuItem("나가기");
	 JPanel jp = null;
	 JPanel jp_group = null;
	
	///** 생성자
	public ChatListView() {
		jp_search.setBackground(Color.GRAY);
		jp_search.setLayout(new FlowLayout(FlowLayout.LEFT));
		jp_search.add(jtf_search);
		jp_search.add(jbtn_search);
		//Popup 추가
		jpm.add(jmi_change);
		jpm.add(jmi_exit);
		//* GroupLayout 넣기
		this.setLayout(new BorderLayout());
		GridLayout gr = new GridLayout();
		ChatDao cDao = new ChatDao();
		list = cDao.getChatMap();
		gr.setRows(10);
		jp_chat.setLayout(gr);
		//GroupLayout쪽에 해당하는 이벤트와 라벨을 붙히기 위해 list를 보내줌
		for (int i=0;i<list.size();i++) {
			jp_group = new JPanel();
			initDisplay(list.get(i));
			
			jp_chat.add(jp);
		}

		this.add("North", jp_search);
		this.add("Center", jsp);
	}
	
	public JPanel initDisplay(Map<String, Object> map) {
		 //* 라벨에 select한 결과를 박아주는 코드
		 jp = new JPanel();
		 jl_img.setText(map.get("clist_img").toString());
		 jl_msg.setText(map.get("clog_contents").toString());
		 jl_name.setText(map.get("clist_name").toString());
		 jl_time.setText(map.get("clog_time").toString());
		 
		 jpm.add(jmi_change);
		 jpm.add(jmi_exit);
		 
		 //* 오른쪽 버튼 클릭시 이벤트
		 jp_second.addMouseListener(new MouseAdapter() {
			
		 	@Override
		 	public void mousePressed(MouseEvent e) {
		 		super.mousePressed(e);
		 		if(e.isMetaDown()) {
		 			//팝업창을 열어줌
		 			jpm.show(jp_second, e.getX(), e.getY());
		 			//Dao로 보내줘야할 pk 값
		 			System.out.println(map.get("clist_code"));
		 		}
		 	}
		 });
		 
	     jp_img.setLayout(new BorderLayout());
	     jp_second.setLayout(new BorderLayout());
	     jp_time.setLayout(new BorderLayout());
	     
	     jl_name.setVerticalAlignment(JLabel.BOTTOM);
	     jl_msg.setVerticalAlignment(JLabel.TOP);
	     
	     //세컨드 패널에 이름과 마지막 메시지가 들어가는 것임
	     jp_second.setLayout(new GridLayout(2,1));
	     jp_img.add(jl_img);
	     jp_second.add(jl_name);
	     jp_second.add(jl_msg);
	     jp_time.add(jl_time);
	     
        // 마지막 메세지부분 회색 처리
        jl_msg.setForeground(Color.GRAY);
	     
	     GroupLayout gl = new GroupLayout(jp);
	     jp.setLayout(gl);
	     //수평 그룹
	     gl.setHorizontalGroup(
	           //순차적으로 그룹을 붙히겠다
	           gl.createSequentialGroup()
	              .addComponent(jp_img, 70, 70, 70)
	              //DEFAULT_SIZE : 늘리면 늘리는 만큼 늘어남
	              .addComponent(jp_second, 300, 300, GroupLayout.DEFAULT_SIZE)
	              .addComponent(jp_time, 70, 70, 70)
	           );
	     //수직 그룹
	     gl.setVerticalGroup(
	           //순차적으로 그룹을 붙히겠다
	           gl.createSequentialGroup()
	              .addGroup(gl.createParallelGroup(Alignment.BASELINE)
	                    .addComponent(jp_img, 80, 80, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(jp_second, 80, 80, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(jp_time, 80, 80, GroupLayout.PREFERRED_SIZE)
	                    )
	           );
	}

}