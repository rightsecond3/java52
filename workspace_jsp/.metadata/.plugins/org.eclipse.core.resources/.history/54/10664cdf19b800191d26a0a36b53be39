package com.util;

import java.util.Enumeration;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

/*
 * 사용자가 입력한 값을 읽을 때마다 반복되는
 * request.getParameter()를 대신하여 사용할 수 있는 bind 메소드 추가
 * 리턴타입은 void로 하지만 파라미터를 Map타입으로 하여
 * 필요한 개발자가 Map을 생성하고 그 주소번지를 받아 값을 담는다.
 */
public class HashMapBinder {
	HttpServletRequest req = null;
	// 첨부 파일 추가
	MultipartRequest multi = null;
	String realFolder = "";
	// 첨부파일의 한글 처리
	String encType = "utf-8";
	// 첨부파일의 크기
	int maxSize = 5*1024*1024;
	
	//* 생성자
	public HashMapBinder(HttpServletRequest req) {
		this.req = req;
		realFolder = "C:\\workspace_jsp\\dev_jsp\\WebContent\\pds";
	}
	// 첨부파일 처리 시 사용할 메소드
	public void multiBind(Map<String, Object> pMap) {
		pMap.clear();
		try {
			multi = new MultipartRequest(req, realFolder, maxSize, encType, new DefaultFileRenamePolicy());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	// getParameter의 name의 이름을 가져옴
	public void bind(Map<String, Object> target) {
		// 파라미터로 넘어온 target안에 다른 정보가 담겨 있다면 제거
		target.clear();
		Enumeration er = req.getParameterNames();
		while (er.hasMoreElements()) {
			String name = (String) er.nextElement();// name,address,pet
			// key : name, address, pet
			// value : 값
			// Tomcat의 server.xml에서 한글 처리를 해줬었음.
			target.put(name, req.getParameter(name));
		}
	}
	// getParameter의 name의 이름을 가져옴
	public void bindPost(Map<String, Object> target) {
		// 파라미터로 넘어온 target안에 다른 정보가 담겨 있다면 제거
		target.clear();
		Enumeration er = req.getParameterNames();
		while (er.hasMoreElements()) {
			String name = (String) er.nextElement();// name,address,pet
			// key : name, address, pet
			// value : 값
			// HangulConversion.toUTF() : POST일경우
			target.put(name, HangulConversion.toUTF(req.getParameter(name)));
		}
	}
}
