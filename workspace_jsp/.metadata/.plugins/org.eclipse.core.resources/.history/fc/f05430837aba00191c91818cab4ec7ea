package com.util;
/*
 * 화면에서 받아와야하는 정보
 * ㄴ> 페이지의 이름(EX. XXX.jsp) : pagePath, totalRecord, numberPerPage, nowPage
 * 공식을 세우는데 필요한 인자
 * ㄴ> 
 * 세워진 공식들은 어디에서 적용해야 하는가
 * ㄴ> 화면(jsp), 생성자에서 초기화 시켜줌.
 * 화면에 내보내져야 하는 언어는 HTML or JAVA ??
 * ㄴ> HTML
 * 내보내지는 정보는 어디에 담아야 하는가
 * ㄴ> 
 */
public class PageBar {
	// 전체 레코드 개수
	private int totalRecord;
	// 페이지당 레코드 수
	private int numPerPage;
	// 블럭당 디폴트 페이지 수 - 여기서는 일단 2개로 정함.
	private int pagePerBlock = 2;
	// 총 페이지
	private int totalPage;
	// 총 블럭 수
	private int totalBlock;
	// 현재 내가 바라보는 페이지
	private int nowPage;
	// 현재 내가 바라보는 블럭
	private int nowBlock;
	// 적용해야 되는 페이지 이름
	private String pagePath;
	// HTML태그를 담을 변수
	private String pagination;
	
	//* 페이지 네비게이션 초기화
	public PageBar(int numPerPage, int totalRecord, int nowPage, String pagePath) {
		this.numPerPage = numPerPage;
		this.totalRecord = totalRecord;
		this.nowPage = nowPage;
		this.pagePath = pagePath;
		// totalPage 계산
		this.totalPage = (int) Math.ceil((double) this.totalRecord/this.numPerPage);
		// totalBlock 계산
		this.totalBlock = (int) Math.ceil((double) this.totalPage/this.pagePerBlock);
		// 현재 내가 바로보는 블록
		this.nowBlock = this.nowPage/this.pagePerBlock;
	}
	//* setter 메소드 선언
	public void setPageBar() {
		StringBuilder pageLink = new StringBuilder();
		// 전체 레코드 수가 0보다 클 때 처리하기
		if() {
			// nowBlock이 0보다 클때 처리
			// 이전 페이지로 이동 해야 하므로 페이지 번호에 a태그를 붙여야 하고
			// pagePath뒤에 이동할 페이지 번호를 붙여서 호출 해야함.
			if(nowBlock > 0) {
				pageLink.append("<a href='"+pagePath+"&nowPage="+((nowBlock-1)*pagePerBlock+(pagePerBlock-1))+"'>");
				pageLink.append("<img border=0 src='/images/bu_a.gif'>");
				pageLink.append("</a>&nbsp;&nbsp;");
			}
			for(int i=0;i<pagePerBlock;i++) {
				// 현재 내가 보고 있는 페이지 블록일 때와
				if(nowBlock*pagePerBlock+i == nowPage) {
					pageLink.append("<b>"+(nowBlock*pagePerBlock+i+1)+"</b>&nbsp;");
				}
				// 그렇지 않을 때를 나누어 처리해야 함.
				else {
					pageLink.append("<a href='"+pagePath+"nowPage="+((nowBlock*pagePerBlock)+i)+"'>"+((nowBlock*pagePerBlock)+i)+"</a>&nbsp;");
				}
				// 모든 경우에 pagePerBlock만큼 반복되지 않으므로 break처리.
				// 주의할것
			}
			// 현재 블록에서 다음 블록이 존재할 경우 이미지 추가하고 페이지 이동 가능하도록
			// a태그 활용하여 링크 처리
			if(totalBlock > nowBlock+1) {
				
			}
		}
		this.pagination = pageLink.toString();
	}
	//* getter 메소드 선언
	public String getPageBar() {
		this.setPageBar();
		return pagination;
	}
}
